# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source.jsx':

  'React Starter':
    'prefix': 'ri'
    'body': """
    // @flow
    import React from 'react'

    type Props = {

    }

    const ${1:component} = (props: Props) => (
      <div>${1:component}</div>
    )

    ${1:component}.defaultProps = {
    }

    export default ${1:component}
    """

  'React Component Starter':
    'prefix': 'rc'
    'body': """
    // @flow
    import React from 'react'

    type Props = {
    }

    type States = {
    }

    class ${1:component} extends React.Component {
      constructor(props) {
        super(props)
        this.state = {
        }
      }

      componentDidMount() {

      }

      render() {
        return (
          <div>${1:component}</div>
        )
      }
    }

    ${1:component}.defaultProps = {
    }

    export default ${1:component}
    """

  'React Native Starter':
    'prefix': 'rnc'
    'body': """
    import React from 'react';
    import PropTypes from 'prop-types';

    import { View, Text } from 'react-native';

    const ${1:component} = (props) => (
      <View>
        <Text>${1:component}</Text>
      </View>
    );

    ${1:component}.propTypes = {
    };

    ${1:component}.defaultProps = {
    };

    export default ${1:component};
    """

  'Styled-jsx Starter':
    'prefix': 'cssjsx'
    'body': """
      import css from 'styled-jsx/css';

      export default css`

      @import 'styles/variables';

      `;
    """
